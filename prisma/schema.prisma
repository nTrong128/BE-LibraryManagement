datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model Sach {
    MaSach     String   @id @default(auto()) @map("_id") @db.ObjectId
    TenSach    String
    DonGia     Float
    SoQuyen    Int
    NamXuatBan Int
    image      String?
    MaNXB      String   @db.ObjectId
    NguonGoc   String
    updateAt   DateTime @updatedAt
    createAt   DateTime @default(now())
    deleted    Boolean  @default(false)

    // Relations
    NhaXuatBan NhaXuatBan @relation(fields: [MaNXB], references: [MaNXB])
    MuonSach   MuonSach[]
}

model NhaXuatBan {
    MaNXB    String   @id @default(auto()) @map("_id") @db.ObjectId
    TenNXB   String
    DiaChi   String
    updateAt DateTime @updatedAt
    createAt DateTime @default(now())
    deleted  Boolean  @default(false)

    // Relations
    Sach Sach[]
}

model MuonSach {
    MaMuon      String       @id @default(auto()) @map("_id") @db.ObjectId
    MaDocGia    String       @db.ObjectId
    MaSach      String       @db.ObjectId
    MaNhanVien  String       @db.ObjectId
    NgayMuon    DateTime?
    NgayTra     DateTime?
    NgayXacNhan DateTime?
    status      BorrowStatus @default(PENDING)
    updateAt    DateTime     @updatedAt
    createAt    DateTime     @default(now())
    deleted     Boolean      @default(false)

    // Relations
    NhanVien NhanVien @relation(fields: [MaNhanVien], references: [MSNV])
    Docgia   Docgia   @relation(fields: [MaDocGia], references: [MaDocGia])
    Sach     Sach     @relation(fields: [MaSach], references: [MaSach])
}

model TaiKhoan {
    id       String @id @default(auto()) @map("_id") @db.ObjectId
    username String @unique
    password String
    email    String @unique
    role     Role   @default(DOCGIA)

    resetPasswordToken     String?
    resetPasswordExpiresAt DateTime?

    deleted  Boolean  @default(false)
    createAt DateTime @default(now())
    updateAt DateTime @updatedAt

    docGia   Docgia?
    nhanVien NhanVien?
}

model Docgia {
    MaDocGia    String    @id @default(auto()) @map("_id") @db.ObjectId
    HoTen       String
    DiaChi      String
    SoDienThoai String
    NgaySinh    DateTime?
    Phai        Gender?

    updateAt DateTime @updatedAt
    createAt DateTime @default(now())
    deleted  Boolean  @default(false)

    taiKhoanId String     @unique @db.ObjectId
    TaiKhoan   TaiKhoan?  @relation(fields: [taiKhoanId], references: [id])
    MuonSach   MuonSach[]
}

model NhanVien {
    MSNV        String   @id @default(auto()) @map("_id") @db.ObjectId
    HoTenNV     String
    DiaChi      String
    SoDienThoai String
    ChucVu      String
    updateAt    DateTime @updatedAt
    createAt    DateTime @default(now())
    deleted     Boolean  @default(false)
    taiKhoanId  String   @unique @db.ObjectId

    MuonSach MuonSach[]

    TaiKhoan TaiKhoan? @relation(fields: [taiKhoanId], references: [id])
}

enum Role {
    NHANVIEN
    DOCGIA
    ADMIN
}

enum Gender {
    MALE
    FEMALE
    OTHER
}

enum BorrowStatus {
    PENDING // Request is created but not yet accepted
    ACCEPTED // Request has been accepted by the librarian
    REJECTED // Request has been rejected by the librarian
    BORROWED // Book is currently borrowed by the user
    RETURNED // Book has been returned
}
